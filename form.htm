<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Login</title>
  <style>
    * {
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
      background: linear-gradient(to right, #0f2027, #203a43, #2c5364);
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .login-container {
      background-color: #ffffff;
      padding: 2rem;
      border-radius: 15px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
      width: 100%;
      max-width: 400px;
    }

    .login-container h2 {
      text-align: center;
      margin-bottom: 1.5rem;
      color: #333;
    }

    .form-group {
      margin-bottom: 1rem;
      position: relative;
    }

    label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 600;
      color: #555;
    }

    input {
      width: 100%;
      padding: 0.7rem;
      border: 1px solid #ccc;
      border-radius: 8px;
      transition: border 0.3s;
    }

    input:focus {
      border-color: #007bff;
      outline: none;
    }

    .toggle-password {
      position: absolute;
      top: 35px;
      right: 10px;
      background: none;
      border: none;
      cursor: pointer;
      font-size: 0.9rem;
      color: #007bff;
      user-select: none;
      padding: 0;
    }

    button[type="submit"] {
      width: 100%;
      padding: 0.75rem;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 8px;
      font-size: 1rem;
      cursor: pointer;
      transition: background 0.3s;
    }

    button[type="submit"]:hover {
      background-color: #0056b3;
    }

    .error-message {
      color: red;
      text-align: center;
      margin-top: 1rem;
      opacity: 0;
      animation: fadeIn 0.5s forwards;
      min-height: 1.2em; /* reserve space so layout doesn't jump */
    }

    @keyframes fadeIn {
      to {
        opacity: 1;
      }
    }
  </style>
</head>
<body>

  <div class="login-container">
    <h2>Welcome</h2>
    <form onsubmit="return handleLogin(event)">
      <div class="form-group">
        <label for="username">Username</label>
        <input
          type="text"
          id="username"
          required
          placeholder="Enter username"
          autocomplete="username"
        />
      </div>
      <div class="form-group">
        <label for="password">Password</label>
        <input
          type="password"
          id="password"
          required
          placeholder="Enter password"
          autocomplete="current-password"
        />
        <button
          type="button"
          class="toggle-password"
          aria-label="Show password"
          onclick="togglePassword()"
        >
          Show
        </button>
      </div>
      <button type="submit">Login</button>
      <div
        class="error-message"
        id="errorMsg"
        aria-live="polite"
        role="alert"
      ></div>
    </form>
  </div>

  <script>
    const fixedUsername = "Auth0rity";
    const passwordLinks = {
      victor: "https://www.programiz.com/html/links",
      joseph:
        "https://developer.mozilla.org/docs/Learn_web_development/Core/Structuring_content/Creating_links",
      chisom: "https://www.w3schools.com/html/",
    };

    function handleLogin(event) {
      event.preventDefault();

      const userInput = document.getElementById("username");
      const passInput = document.getElementById("password");
      const errorMsg = document.getElementById("errorMsg");

      const user = userInput.value.trim();
      const pass = passInput.value.trim();

      errorMsg.textContent = "";
      errorMsg.style.opacity = 0;

      if (user !== fixedUsername) {
        errorMsg.textContent = "Invalid username.";
        errorMsg.style.opacity = 1;
        clearInputs();
        userInput.focus();
        return false;
      }

      if (passwordLinks[pass]) {
        window.location.href = passwordLinks[pass];
      } else {
        errorMsg.textContent = "Invalid password.";
        errorMsg.style.opacity = 1;
        clearInputs();
        passInput.focus();
      }

      return false;
    }

    function clearInputs() {
      document.getElementById("username").value = "";
      document.getElementById("password").value = "";
    }

    function togglePassword() {
      const passInput = document.getElementById("password");
      const toggleBtn = document.querySelector(".toggle-password");
      if (passInput.type === "password") {
        passInput.type = "text";
        toggleBtn.textContent = "Hide";
        toggleBtn.setAttribute("aria-label", "Hide password");
      } else {
        passInput.type = "password";
        toggleBtn.textContent = "Show";
        toggleBtn.setAttribute("aria-label", "Show password");
      }
    }
  </script>
</body>
</html>
